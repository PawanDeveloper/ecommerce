version: '3.8'

services:
  # Redis for Celery
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django Web Application (using SQLite)
  web:
    build: .
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DEBUG=False
      - SECRET_KEY=your-production-secret-key-change-me-in-production
      - DATABASE_URL=sqlite:///app/db.sqlite3
      - REDIS_URL=redis://redis:6379/0
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
    volumes:
      - ./db.sqlite3:/app/db.sqlite3
      - ./media:/app/media
      - ./staticfiles:/app/staticfiles
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py create_sample_data &&
             gunicorn --bind 0.0.0.0:8000 --workers 3 ecommerce.wsgi:application"

  # Celery Worker
  celery:
    build: .
    restart: unless-stopped
    environment:
      - DEBUG=False
      - SECRET_KEY=your-production-secret-key-change-me-in-production
      - DATABASE_URL=sqlite:///app/db.sqlite3
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./db.sqlite3:/app/db.sqlite3
      - ./media:/app/media
      - ./logs:/app/logs
    depends_on:
      - redis
      - web
    command: celery -A ecommerce worker --loglevel=info --concurrency=2

  # Celery Flower (Optional - for monitoring)
  flower:
    build: .
    restart: unless-stopped
    ports:
      - "5555:5555"
    environment:
      - DEBUG=False
      - SECRET_KEY=your-production-secret-key-change-me-in-production
      - DATABASE_URL=sqlite:///app/db.sqlite3
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./db.sqlite3:/app/db.sqlite3
    depends_on:
      - redis
      - celery
    command: celery -A ecommerce flower --port=5555
    profiles:
      - monitoring

volumes:
  redis_data: 